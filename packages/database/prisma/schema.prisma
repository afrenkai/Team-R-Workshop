// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

// example table used in the express router example
model HighScore {
  id    Int      @id
  time  DateTime
  score Int
}

// schema.prisma
// making Edges table
// 2 columns:
// StartNodeID which is a VARCHAR (mixed datatype)
// endNodeID which is a VARCHAR as well
model Edges {
  EdgeID      Int    @id
  StartNodeID String // StartNodeID column in Edges table
  EndNodeID   String // EndNodeID column in Edges table
}

// making Nodes table
// 8 Columns:
// nodeID which is a string
// xcoord which is a 4digit CHAR
// ycoord which is a 3-4 digit CHAR
// floor 2 digit CHAR
// building is a string
// nodetype is a string
// longname is a string
// shortName is a string

model Nodes {
  NodeID         String          @id
  Xcoord         String
  Ycoord         String
  Floor          String
  Building       String
  NodeType       String
  LongName       String          @unique
  ShortName      String
  FlowerRequests FlowerRequest[]
}

// model Request {
//   RequestID     Int      @id @default(autoincrement())
//   Time          DateTime
//   Type          String
//   Details       String
//   UserID        Int // USE RELATION FOR LATER ITERATION (When we need to make a Users table)
//   Destination   Nodes    @relation(fields: [DestinationID], references: [LongName])
//   DestinationID String
// }

// npx prisma generate for schema. can see using database
// npx prisma migrate dev --name init to run the code to add to a database. will overwrite anything in public.

// model Request {
//   RequestID     Int      @id @default(autoincrement())
//   Time          DateTime
//   Type          String
//   Details       String
//   UserID        Int // USE RELATION FOR LATER ITERATION (When we need to make a Users table)
//   Destination   Nodes    @relation(fields: [DestinationID], references: [NodeID])
//   DestinationID String
// }

model FlowerRequest {
  RequestID         Int      @id @default(autoincrement())
  Time              DateTime
  DeliveryDate      DateTime
  RecipientName     String
  FlowerType        String
  UserID            Int // USE RELATION FOR LATER ITERATION (When we need to make a Users table)
  Destination       Nodes    @relation(fields: [DestinationLongID], references: [LongName])
  DestinationLongID String
}

// npx prisma generate for schema. can see using database
// npx prisma migrate dev --name init to run the code to add to a database. will overwrite anything in public.
